version: "2.1"
services:
  nginx:
    build: .
    restart: always
    container_name: nginx
    depends_on:
      - web_service
      - apache
      - movie_service
    networks:
      - my-network
    ports:
      - 80:80
      - 8081:8081
      - 8080:8080

  apache:
    image: httpd:alpine
    restart: always
    networks:
      - my-network

  database:
    restart: always
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_pass
      - POSTGRES_DB=cinema
    ports:
      - "5433:5432"
    expose:
      - "5432"
    networks:
      - my-network
    volumes:
      - ./database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "cinema", "-U", "postgres"]
      timeout: 1s
      retries: 1

  web_service:
    container_name: web_service
    build: https://github.com/kimbugp/movie-bookings.git
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres_pass@database:5432/cinema
      - DEBUG=False
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - SECRET_KEY=notsecret
    volumes:
      - ./:/code/
    networks:
      my-network:
        aliases:
          - flask-app
    depends_on:
      database:
        condition: service_healthy
    command: gunicorn run:app -b 0.0.0.0:5000 --log-level DEBUG

  movie_service:
    build: https://github.com/kimbugp/movie-bookings.git
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres_pass@database:5432/cinema
      - DEBUG=False
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - SECRET_KEY=notsecret
    volumes:
      - ./:/code/
    networks:
      my-network:
        aliases:
          - movie_service
    depends_on:
      database:
        condition: service_healthy
    command: gunicorn run:app -b 0.0.0.0:8000 --log-level DEBUG

networks:
  my-network:
